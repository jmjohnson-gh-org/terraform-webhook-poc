name: 'Terraform Webhook Approval Workflow'

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'

jobs:
  terraform-plan-rg:
    name: 'Terraform plan RG'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-plan
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init RG
        working-directory: ./rg
        id: init
        run: terraform init
      - name: Terraform Plan RG
        working-directory: ./rg
        id: plan
        run: terraform plan

  terraform-plan-vnet:
    name: 'Terraform plan Vnet'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-plan
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init Vnet
        working-directory: ./vnet
        id: init
        run: terraform init
      - name: Terraform Plan Vnet
        working-directory: ./vnet
        id: plan
        run: terraform plan

  terraform-plan-subnet:
    name: 'Terraform plan Subnet'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-plan
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init Subnet
        working-directory: ./subnet
        id: init
        run: terraform init
      - name: Terraform Plan Subnet
        working-directory: ./subnet
        id: plan
        run: terraform plan

  manual-approval:
    name: 'Manual Approval'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-manual-approval
    needs: 
      - terraform-plan-rg
      - terraform-plan-vnet
      - terraform-plan-subnet
    steps:
    - run: echo "Workflow Approved, Starting in 5 seconds"
    - run: sleep 5

  terraform-apply-rg:
    name: 'Terraform Apply RG'
    needs: manual-approval
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-apply
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init
        working-directory: ./rg
        run: terraform init
      - name: Terraform Apply
        working-directory: ./rg
        run: terraform apply -auto-approve

  terraform-apply-vnet:
    name: 'Terraform Apply Vnet'
    needs: terraform-apply-rg
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-apply
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init
        working-directory: ./vnet
        run: terraform init
      - name: Terraform Apply
        working-directory: ./vnet
        run: terraform apply -auto-approve

  terraform-apply-subnet:
    name: 'Terraform Apply Subnet'
    needs: terraform-apply-vnet
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}-apply
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init
        working-directory: ./subnet
        run: terraform init
      - name: Terraform Apply
        working-directory: ./subnet
        run: terraform apply -auto-approve
